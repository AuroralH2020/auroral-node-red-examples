[
    {
        "id": "c78f843c437bda5c",
        "type": "tab",
        "label": "Monitor service",
        "disabled": false,
        "info": ""
    },
    {
        "id": "764bab4731a893bb",
        "type": "ui_ui_control",
        "z": "c78f843c437bda5c",
        "name": "",
        "events": "all",
        "x": 80,
        "y": 400,
        "wires": [
            [
                "e68ea59f64f377a4",
                "6006c17010f25e8f"
            ]
        ]
    },
    {
        "id": "2f8ece999fcd63d3",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "get partners",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/collaboration/partners",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1030,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "bd7a8d11f3d4f258",
        "type": "auroralDevice",
        "z": "c78f843c437bda5c",
        "name": "Monitor service",
        "adapterId": "node-red-consumer",
        "agent": "47fe486c414b603c",
        "regType": "newItem",
        "outputs": 1,
        "inputs": 1,
        "allowInput": true,
        "allowEventSubscription": false,
        "subscribedEvents": [],
        "devicetype": "Device",
        "nop": true,
        "unregistering": true,
        "mergePidOutputs": true,
        "td": "{\n  \"@context\": \"https://www.w3.org/2019/wot/td/v1\",\n  \"title\": \"Monitor service\",\n  \"@type\": \"Service\",\n \"securityDefinitions\": {\n    \"nosec_sc\": {\n      \"scheme\": \"nosec\"\n    }\n  },\n  \"security\": \"nosec_sc\",\n  \"properties\": {},\n  \"actions\": {},\n  \"events\": {},\n  \"adapterId\": \"node-red-consumer\"\n  \n}",
        "pids": [],
        "eids": [],
        "x": 400,
        "y": 320,
        "wires": [
            [
                "ba1314ed35175558"
            ]
        ]
    },
    {
        "id": "4874ea03920fd755",
        "type": "registrations",
        "z": "c78f843c437bda5c",
        "name": "",
        "agent": "47fe486c414b603c",
        "pids": "PID1",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "df8d3b28caa9f0de"
            ]
        ]
    },
    {
        "id": "805dd239f4720275",
        "type": "inject",
        "z": "c78f843c437bda5c",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "4874ea03920fd755"
            ]
        ]
    },
    {
        "id": "df8d3b28caa9f0de",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "filter consumer",
        "func": "if(msg.payload){\n    for(const object of msg.payload) {\n       \n        if(object.adapterId === \"node-red-consumer\")\n        {\n            msg.myOid = object.oid\n        }\n    }\n}\nif(msg.myOid){\n    return msg;\n} else {\n     node.warn('Object not yet registered');\n    return [null,{payload:'Please wait before item is registered'}]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 40,
        "wires": [
            [
                "d87a3059128ecdcb"
            ],
            [
                "756744bda2c6491f",
                "1ac765e0838ed47d"
            ]
        ]
    },
    {
        "id": "d87a3059128ecdcb",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Set global variables",
        "rules": [
            {
                "t": "set",
                "p": "myOid",
                "pt": "flow",
                "to": "myOid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "756744bda2c6491f",
        "type": "delay",
        "z": "c78f843c437bda5c",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 100,
        "wires": [
            [
                "4874ea03920fd755"
            ]
        ]
    },
    {
        "id": "204f1a8b3f538386",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "get my oid",
        "info": "",
        "x": 320,
        "y": 40,
        "wires": []
    },
    {
        "id": "cd3850f6d89e9979",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Get data button",
        "info": "",
        "x": 520,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7e2a70cd22392f94",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "getTd",
        "links": [
            "bc482a43cff37fa2"
        ],
        "x": 65,
        "y": 220,
        "wires": [
            [
                "f09635a2fa535806"
            ]
        ]
    },
    {
        "id": "c925a5d316fec054",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get item TD",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/discovery/remote/td/{{oid}}/{{myOid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 350,
        "y": 220,
        "wires": [
            [
                "5373809c42ca57c0"
            ]
        ]
    },
    {
        "id": "f09635a2fa535806",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "myOid",
                "pt": "msg",
                "to": "myOid",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "oid",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 220,
        "wires": [
            [
                "c925a5d316fec054"
            ]
        ]
    },
    {
        "id": "bc482a43cff37fa2",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "7e2a70cd22392f94"
        ],
        "x": 965,
        "y": 700,
        "wires": []
    },
    {
        "id": "5373809c42ca57c0",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "if(msg.statusCode === 200){\n    if(msg.payload.message.message){\n        msg.payload = msg.payload.message.message\n    } else {\n        msg.payload = msg.payload.message\n    }\n    delete msg.responseUrl\n    delete msg.redirectList\n    delete msg.retry\n    delete msg.headers\n    return msg;\n} else {\n    node.warn('Warning status code:' + msg.statusCode)\n    node.warn(msg)\n    return [null,{payload: 'Warning status code:' + msg.statusCode}]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 220,
        "wires": [
            [
                "efa67524f9a239dd"
            ],
            [
                "9a8ccf173873d768"
            ]
        ]
    },
    {
        "id": "fe11e4ab67886947",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Get item td and extract props",
        "info": "",
        "x": 160,
        "y": 180,
        "wires": []
    },
    {
        "id": "fbb311a419c76886",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Source",
        "tooltip": "",
        "place": "Select option",
        "group": "19ff0589e9dc01ae",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 300,
        "y": 460,
        "wires": [
            [
                "20e6a83088d30e35",
                "87a35fd7e67f0367"
            ]
        ]
    },
    {
        "id": "20e6a83088d30e35",
        "type": "switch",
        "z": "c78f843c437bda5c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "myNode",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "myOrg",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 510,
        "y": 460,
        "wires": [
            [
                "5e05244719874bd9"
            ],
            [
                "de832bb9c9caed56"
            ],
            []
        ]
    },
    {
        "id": "c590dadcdb31833e",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "updateItems",
        "links": [
            "6078d64933cb661f",
            "ef35bc627d47b0bc",
            "1a829f7a8b4171da"
        ],
        "x": 335,
        "y": 720,
        "wires": [
            [
                "f99fbed25d93a745"
            ]
        ]
    },
    {
        "id": "9b3d55bbd90ad28d",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Item",
        "tooltip": "",
        "place": "Select option",
        "group": "19ff0589e9dc01ae",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 830,
        "y": 700,
        "wires": [
            [
                "bc482a43cff37fa2",
                "f6522d2179943646"
            ]
        ]
    },
    {
        "id": "12f9c393ad4ca7c0",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "msg.options = []\nif(msg.payload){\n    for(const item of msg.payload){\n        const obj = {}\n        obj[item.name] = item.oid\n        msg.options.push(obj)\n    }\n  \n} else {\n   msg.options = []\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 700,
        "wires": [
            [
                "9b3d55bbd90ad28d"
            ]
        ]
    },
    {
        "id": "f99fbed25d93a745",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "items",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 740,
        "wires": [
            [
                "12f9c393ad4ca7c0"
            ]
        ]
    },
    {
        "id": "8da7b5bfdf31429d",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Update items",
        "info": "",
        "x": 510,
        "y": 700,
        "wires": []
    },
    {
        "id": "844ecf5528bcdfeb",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Update TD props",
        "info": "",
        "x": 520,
        "y": 820,
        "wires": []
    },
    {
        "id": "1a2d3d94197c0761",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "properties",
                "pt": "msg",
                "to": "properties",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "td",
                "pt": "msg",
                "to": "td",
                "tot": "flow"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 880,
        "wires": [
            [
                "2a059d06e1742ddd",
                "982a9446e71550dd",
                "d02019aa86b0327d",
                "08c05b6008129f7a"
            ]
        ]
    },
    {
        "id": "8468a415f40fac1d",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "updateTd",
        "links": [
            "2b7de10a027d1988",
            "ef35bc627d47b0bc",
            "b3c58cd6cfcbb068"
        ],
        "x": 335,
        "y": 860,
        "wires": [
            [
                "1a2d3d94197c0761"
            ]
        ]
    },
    {
        "id": "2b7de10a027d1988",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "8468a415f40fac1d",
            "c97e7ce82ea309dd"
        ],
        "x": 955,
        "y": 220,
        "wires": []
    },
    {
        "id": "de832bb9c9caed56",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get myOrg items",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/discovery/items/organisation",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 690,
        "y": 480,
        "wires": [
            [
                "686314160a7c961e"
            ]
        ]
    },
    {
        "id": "686314160a7c961e",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "if(msg.statusCode === 200){\n    msg.items = msg.payload.message\n    delete msg.statusCode\n    delete msg.responseUrl\n    delete msg.redirectList\n    delete msg.retry\n    delete msg.headers\n  \n} else {\n    node.warn('Warning n1')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 480,
        "wires": [
            [
                "46a64e550b6101c0"
            ]
        ]
    },
    {
        "id": "5e05244719874bd9",
        "type": "registrations",
        "z": "c78f843c437bda5c",
        "name": "",
        "agent": "47fe486c414b603c",
        "pids": "PID1",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "575b998f9226542d"
            ]
        ]
    },
    {
        "id": "575b998f9226542d",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "msg.items=[]\nif(msg.payload.length > 0 ){\n    for(const obj of msg.payload){\n        msg.items.push({name: obj.name, oid: obj.oid, company: 'myself' })\n    }\n} else {\n    node.warn('Warning n1')\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 420,
        "wires": [
            [
                "46a64e550b6101c0"
            ]
        ]
    },
    {
        "id": "46a64e550b6101c0",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "items",
                "pt": "flow",
                "to": "items",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 440,
        "wires": [
            [
                "1a829f7a8b4171da"
            ]
        ]
    },
    {
        "id": "1a829f7a8b4171da",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "c590dadcdb31833e"
        ],
        "x": 1155,
        "y": 440,
        "wires": []
    },
    {
        "id": "e68ea59f64f377a4",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"My node\":\"myNode\"},{\"My org\":\"myOrg\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 460,
        "wires": [
            [
                "fbb311a419c76886"
            ]
        ]
    },
    {
        "id": "ad5fa1c72a84f23a",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "clear UI",
        "links": [
            "6006c17010f25e8f",
            "dafb190b99f408c7",
            "ac578a2c5c637ddf",
            "87a35fd7e67f0367"
        ],
        "x": 75,
        "y": 1000,
        "wires": [
            [
                "80121613b9dbb45a",
                "f6522d2179943646",
                "90e7455996968c2b",
                "252e890592b4771c",
                "6844483862faf6f1"
            ]
        ]
    },
    {
        "id": "6006c17010f25e8f",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "ad5fa1c72a84f23a"
        ],
        "x": 195,
        "y": 400,
        "wires": []
    },
    {
        "id": "87a35fd7e67f0367",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "ad5fa1c72a84f23a"
        ],
        "x": 475,
        "y": 520,
        "wires": []
    },
    {
        "id": "9138d06a4ebbbef4",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Source changed",
        "info": "",
        "x": 320,
        "y": 420,
        "wires": []
    },
    {
        "id": "efa67524f9a239dd",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Extract props",
        "func": "\nif(msg.payload.properties) {\n    msg.properties = Object.keys(msg.payload.properties)\n} else {\n    msg.properties = []\n}\nmsg.td = JSON.stringify(msg.payload, null, 2);\nreturn msg\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 200,
        "wires": [
            [
                "46cebfd5012c58c2",
                "19bb57dc3d4f8f26"
            ]
        ]
    },
    {
        "id": "46cebfd5012c58c2",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Store",
        "rules": [
            {
                "t": "set",
                "p": "properties",
                "pt": "flow",
                "to": "properties",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "td",
                "pt": "flow",
                "to": "td",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "selectedOid",
                "pt": "flow",
                "to": "oid",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 220,
        "wires": [
            [
                "2b7de10a027d1988"
            ]
        ]
    },
    {
        "id": "ce89446f684bd150",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Request data",
        "info": "",
        "x": 110,
        "y": 280,
        "wires": []
    },
    {
        "id": "ce7628616415b16c",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "getData",
        "links": [
            "aa1b17cff47cbc30"
        ],
        "x": 65,
        "y": 320,
        "wires": [
            [
                "897f9e220353db1a"
            ]
        ]
    },
    {
        "id": "897f9e220353db1a",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "type",
                "pt": "msg",
                "to": "property",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "oid",
                "pt": "msg",
                "to": "selectedOid",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 320,
        "wires": [
            [
                "bd7a8d11f3d4f258"
            ]
        ]
    },
    {
        "id": "2a059d06e1742ddd",
        "type": "ui_template",
        "z": "c78f843c437bda5c",
        "group": "7fe25f629f718e1f",
        "name": "TD",
        "order": 2,
        "width": 10,
        "height": 6,
        "format": "<div>\n    <h4>TD:</h4>\n    <pre>{{msg.td}}</pre>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "e7f70832f34cfcf9",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Property",
        "tooltip": "",
        "place": "Select property",
        "group": "19ff0589e9dc01ae",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 860,
        "y": 840,
        "wires": [
            [
                "57ab7ea9a37e7ece"
            ]
        ]
    },
    {
        "id": "982a9446e71550dd",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "\nif(msg.properties) {\n    msg.options = msg.properties\n} else {\n    msg.options = []\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 840,
        "wires": [
            [
                "e7f70832f34cfcf9"
            ]
        ]
    },
    {
        "id": "1db1a3e2e41246e1",
        "type": "ui_button",
        "z": "c78f843c437bda5c",
        "name": "",
        "group": "19ff0589e9dc01ae",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Get data",
        "tooltip": "Request data ",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 500,
        "y": 1100,
        "wires": [
            [
                "3d4577411346d119"
            ]
        ]
    },
    {
        "id": "1a91d3f93fdb1099",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "UI updates",
        "info": "",
        "x": 320,
        "y": 660,
        "wires": []
    },
    {
        "id": "57ab7ea9a37e7ece",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedProperty",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "cf2808a5503b4066",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "if(msg.usePut){\n    try {\n        msg.payload = JSON.parse(msg.putBody)\n        if(msg.pid) {\n            return msg;\n        } else {\n           node.warn('not selected')\n        }\n    } catch (err) {\n         node.warn('NOT JSON')\n         return [null, {payload: 'PUT body is not in JSON format'}]\n    }\n}\nelse {\n    delete msg.payload\n    if(msg.pid) {\n        return msg;\n    } else {\n       node.warn('not selected')\n        return [null, {payload: 'Please choose source, item and property'}]\n}\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 1100,
        "wires": [
            [
                "aa1b17cff47cbc30"
            ],
            [
                "351fd14c2f13c96a"
            ]
        ]
    },
    {
        "id": "3d4577411346d119",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "get variable",
        "rules": [
            {
                "t": "set",
                "p": "pid",
                "pt": "msg",
                "to": "selectedProperty",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "oid",
                "pt": "msg",
                "to": "oid",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "usePut",
                "pt": "msg",
                "to": "usePut",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "putBody",
                "pt": "msg",
                "to": "putBody",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1100,
        "wires": [
            [
                "cf2808a5503b4066"
            ]
        ]
    },
    {
        "id": "aa1b17cff47cbc30",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "ce7628616415b16c"
        ],
        "x": 935,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ba1314ed35175558",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parsing",
        "func": "if(msg.payload){\n    delete msg.responseUrl\n    delete msg.redirectList\n    delete msg.retry\n    delete msg.headers\n    msg.payload = JSON.stringify(msg.payload, null, 2);\n    return msg\n} else {\n    node.warn('Warning status code:' + msg.statusCode)\n    return [null, {payload: 'Warning status code:' + msg.statusCode}]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 320,
        "wires": [
            [
                "825f25f48b9646db"
            ],
            [
                "7774c9880ff14319"
            ]
        ]
    },
    {
        "id": "825f25f48b9646db",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Store",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 300,
        "wires": [
            [
                "f0bf682e5a103dd1"
            ]
        ]
    },
    {
        "id": "2bad44f804f3fb8f",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "updateDataView",
        "links": [
            "f0bf682e5a103dd1"
        ],
        "x": 335,
        "y": 980,
        "wires": [
            [
                "ccbce6df8277f8ed"
            ]
        ]
    },
    {
        "id": "ccbce6df8277f8ed",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "msg",
                "to": "data",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "aca7519e497dc65f"
            ]
        ]
    },
    {
        "id": "aca7519e497dc65f",
        "type": "ui_template",
        "z": "c78f843c437bda5c",
        "group": "4dee40efc3e42c9e",
        "name": "Data",
        "order": 1,
        "width": 9,
        "height": 6,
        "format": "<pre>{{msg.data}}</pre>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 770,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "d02019aa86b0327d",
        "type": "ui_template",
        "z": "c78f843c437bda5c",
        "group": "7fe25f629f718e1f",
        "name": "Properties",
        "order": 1,
        "width": 10,
        "height": 4,
        "format": "<h3>Properties:</h3>\n<ul>\n  <li ng-repeat=\"prop in msg.properties\">{{prop}}</li>\n \n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 790,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "f0bf682e5a103dd1",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "2bad44f804f3fb8f"
        ],
        "x": 795,
        "y": 300,
        "wires": []
    },
    {
        "id": "08c05b6008129f7a",
        "type": "debug",
        "z": "c78f843c437bda5c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 980,
        "wires": []
    },
    {
        "id": "19bb57dc3d4f8f26",
        "type": "debug",
        "z": "c78f843c437bda5c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 180,
        "wires": []
    },
    {
        "id": "11906826a46f2819",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Property selected",
        "info": "",
        "x": 1020,
        "y": 800,
        "wires": []
    },
    {
        "id": "453d9b1c280d5643",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "Update Data view",
        "info": "",
        "x": 530,
        "y": 980,
        "wires": []
    },
    {
        "id": "12a5992ee036042e",
        "type": "ui_switch",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Use PUT",
        "tooltip": "When enabled, message body can be sent in request. Requested property needs to support this feature",
        "group": "19ff0589e9dc01ae",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "a363d10cc7eed76b",
                "4ef76db380855760"
            ]
        ]
    },
    {
        "id": "4f820f171912b01c",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "PUT / GET selection",
        "info": "",
        "x": 350,
        "y": 1160,
        "wires": []
    },
    {
        "id": "03dee1884e76aed1",
        "type": "ui_text_input",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "PUT body",
        "tooltip": "",
        "group": "19ff0589e9dc01ae",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 500,
        "y": 1320,
        "wires": [
            [
                "0d2f0c08dd4dc766"
            ]
        ]
    },
    {
        "id": "0d2f0c08dd4dc766",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "set variable",
        "rules": [
            {
                "t": "set",
                "p": "putBody",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "a363d10cc7eed76b",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "set variable",
        "rules": [
            {
                "t": "set",
                "p": "usePut",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "252e890592b4771c",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1200,
        "wires": [
            [
                "12a5992ee036042e"
            ]
        ]
    },
    {
        "id": "4ef76db380855760",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "toggle",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1280,
        "wires": [
            [
                "03dee1884e76aed1"
            ]
        ]
    },
    {
        "id": "6844483862faf6f1",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1320,
        "wires": [
            [
                "03dee1884e76aed1"
            ]
        ]
    },
    {
        "id": "9a8ccf173873d768",
        "type": "ui_toast",
        "z": "c78f843c437bda5c",
        "position": "bottom left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "err notif",
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "7774c9880ff14319",
        "type": "ui_toast",
        "z": "c78f843c437bda5c",
        "position": "bottom left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "err notif",
        "x": 720,
        "y": 360,
        "wires": []
    },
    {
        "id": "351fd14c2f13c96a",
        "type": "ui_toast",
        "z": "c78f843c437bda5c",
        "position": "bottom left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "err notif",
        "x": 980,
        "y": 1120,
        "wires": []
    },
    {
        "id": "f6522d2179943646",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "rules": [
            {
                "t": "delete",
                "p": "td",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "properties",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "selectedProperty",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "data",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 900,
        "wires": [
            [
                "1a2d3d94197c0761"
            ]
        ]
    },
    {
        "id": "80121613b9dbb45a",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "rules": [
            {
                "t": "delete",
                "p": "td",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "items",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "item",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "properties",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "selectedProperty",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "data",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 760,
        "wires": [
            [
                "f99fbed25d93a745"
            ]
        ]
    },
    {
        "id": "90e7455996968c2b",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "rules": [
            {
                "t": "delete",
                "p": "data",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1020,
        "wires": [
            [
                "ccbce6df8277f8ed"
            ]
        ]
    },
    {
        "id": "1ac765e0838ed47d",
        "type": "ui_toast",
        "z": "c78f843c437bda5c",
        "position": "bottom left",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "err notif",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "c32d5abb11bf98ed",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get myOrg partners",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/collaboration/partners",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 140,
        "y": 1620,
        "wires": [
            [
                "991abe983a96f1b6"
            ]
        ]
    },
    {
        "id": "19c7fc9fcfc60d71",
        "type": "ui_ui_control",
        "z": "c78f843c437bda5c",
        "name": "",
        "events": "change",
        "x": 100,
        "y": 1560,
        "wires": [
            [
                "c32d5abb11bf98ed",
                "858c1d5f63166004",
                "a15ab0146e589c02"
            ]
        ]
    },
    {
        "id": "27803d7ddfef49c0",
        "type": "comment",
        "z": "c78f843c437bda5c",
        "name": "DISCOVERY",
        "info": "",
        "x": 90,
        "y": 1480,
        "wires": []
    },
    {
        "id": "aaabb19140919135",
        "type": "split",
        "z": "c78f843c437bda5c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 1620,
        "wires": [
            [
                "dff32e4baf5f9f61"
            ]
        ]
    },
    {
        "id": "991abe983a96f1b6",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if (msg.statusCode === 200) {\n    msg.payload = msg.payload.message\n   \n    return msg;\n} else {\n     node.warn('Status code:' + msg.statusCode)\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1620,
        "wires": [
            [
                "aaabb19140919135"
            ]
        ]
    },
    {
        "id": "090d98a624b349e8",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get partner details",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/collaboration/partners/{{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 530,
        "y": 1560,
        "wires": [
            [
                "122725fbdebba9b5"
            ]
        ]
    },
    {
        "id": "858c1d5f63166004",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Init",
        "rules": [
            {
                "t": "set",
                "p": "partners",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectedAgid",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectedCid",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "resultSPARQL",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectedMode",
                "pt": "flow",
                "to": "partner",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1560,
        "wires": [
            [
                "3a6c54c6eb610f16"
            ]
        ]
    },
    {
        "id": "122725fbdebba9b5",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if (msg.statusCode === 200) {\n    msg.partner.name = msg.payload.message.name\n    return msg\n} else {\n    //node.warn('Status code: ' + msg.statusCode)\n    msg.payload= {}\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1560,
        "wires": [
            [
                "75e4f3782ecae0c1"
            ]
        ]
    },
    {
        "id": "3ebbbb3b100a783e",
        "type": "join",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 730,
        "y": 1640,
        "wires": [
            [
                "c2bf44be76199f19"
            ]
        ]
    },
    {
        "id": "c2bf44be76199f19",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "\nmsg.partners = msg.payload.filter(partner => {\n  return partner.name ? true : false\n});\n\n\nmsg.options = []\n for(const partner of msg.partners){\n        const obj = {}\n        obj[partner.name] = partner.cid\n        msg.options.push(obj)\n    }\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1640,
        "wires": [
            [
                "baf5c976a23c66d0"
            ]
        ]
    },
    {
        "id": "12eb3019175f81d2",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Store partners",
        "rules": [
            {
                "t": "set",
                "p": "partners",
                "pt": "flow",
                "to": "partners",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "5545a031a76c0644",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Partner:",
        "tooltip": "",
        "place": "Select option",
        "group": "69d7ea2138e75f9b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 620,
        "y": 1760,
        "wires": [
            [
                "d641b15ee8ee3d18"
            ]
        ]
    },
    {
        "id": "baf5c976a23c66d0",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get myOrg nodes",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/discovery/nodes/organisation",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1010,
        "y": 1640,
        "wires": [
            [
                "33e87d454631066f"
            ]
        ]
    },
    {
        "id": "33e87d454631066f",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if (msg.statusCode === 200) {\n    const nodes = []\n    \n    msg.payload.message.forEach(n => {\n        nodes.push(n.agid)\n    });\n    \n    let cid = 'my org cid'\n    if(msg.payload.message.length > 0) {\n        cid = msg.payload.message[0].cid\n    } \n    msg.options.unshift({'My organisation': cid})\n    msg.partners.unshift({name: 'My organisation', nodes, cid})\n    return msg\n} else {\n    node.warn('Status code: ' + msg.statusCode)\n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1640,
        "wires": [
            [
                "5545a031a76c0644",
                "12eb3019175f81d2"
            ]
        ]
    },
    {
        "id": "dff32e4baf5f9f61",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "msg.partner = { cid: msg.payload, nodes: []}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1620,
        "wires": [
            [
                "090d98a624b349e8"
            ]
        ]
    },
    {
        "id": "87195c27d2bbf6a5",
        "type": "ui_text",
        "z": "c78f843c437bda5c",
        "group": "0f99c8ea07436709",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CID:",
        "format": "{{msg.cid}}",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1820,
        "wires": []
    },
    {
        "id": "58c378efa6b485fd",
        "type": "ui_text",
        "z": "c78f843c437bda5c",
        "group": "0f99c8ea07436709",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "AGID:",
        "format": "{{msg.agid}}",
        "layout": "row-spread",
        "className": "",
        "x": 370,
        "y": 1860,
        "wires": []
    },
    {
        "id": "d641b15ee8ee3d18",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "selected cid",
        "rules": [
            {
                "t": "set",
                "p": "selectedCid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "partners",
                "pt": "msg",
                "to": "partners",
                "tot": "flow"
            },
            {
                "t": "delete",
                "p": "selectedAgid",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 1760,
        "wires": [
            [
                "21158a39b227fae6",
                "2792c19fc72785b8"
            ]
        ]
    },
    {
        "id": "21158a39b227fae6",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "5324084eaf1fdf2d",
            "fdc5d41ff0dcc42e",
            "e7603f0552b9f7e3",
            "875a4c9065e26984"
        ],
        "x": 925,
        "y": 1720,
        "wires": []
    },
    {
        "id": "5324084eaf1fdf2d",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "Update discovery UI",
        "links": [
            "21158a39b227fae6",
            "b83fcebdac3b1bba",
            "848b4913ed0f3307",
            "4ccfb03aae30696d"
        ],
        "x": 55,
        "y": 1880,
        "wires": [
            [
                "b317be16fff8c2f5"
            ]
        ]
    },
    {
        "id": "b317be16fff8c2f5",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Get",
        "rules": [
            {
                "t": "set",
                "p": "cid",
                "pt": "msg",
                "to": "selectedCid",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "agid",
                "pt": "msg",
                "to": "selectedAgid",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "SPARQL",
                "pt": "msg",
                "to": "resultSPARQL",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 1880,
        "wires": [
            [
                "87195c27d2bbf6a5",
                "58c378efa6b485fd",
                "3ed8760f953416f4"
            ]
        ]
    },
    {
        "id": "b061711ed2875f1e",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Node:",
        "tooltip": "",
        "place": "Select option",
        "group": "69d7ea2138e75f9b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1230,
        "y": 1760,
        "wires": [
            [
                "4a4c3feefb284428"
            ]
        ]
    },
    {
        "id": "2792c19fc72785b8",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "msg.options = []\nif(msg.partners) {\n   msg.partners.forEach(partner => {\n    if(partner.cid == msg.payload){\n        msg.options = partner.nodes\n    }\n}) \n} else {\n    msg.options = []\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1760,
        "wires": [
            [
                "b061711ed2875f1e"
            ]
        ]
    },
    {
        "id": "4a4c3feefb284428",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "selected AGID",
        "rules": [
            {
                "t": "set",
                "p": "selectedAgid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 1720,
        "wires": [
            [
                "b83fcebdac3b1bba"
            ]
        ]
    },
    {
        "id": "b83fcebdac3b1bba",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "5324084eaf1fdf2d",
            "fdc5d41ff0dcc42e",
            "e7603f0552b9f7e3",
            "875a4c9065e26984"
        ],
        "x": 1495,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3a6c54c6eb610f16",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "5324084eaf1fdf2d",
            "fdc5d41ff0dcc42e"
        ],
        "x": 355,
        "y": 1560,
        "wires": []
    },
    {
        "id": "044b9d9e0cfa8a2d",
        "type": "ui_button",
        "z": "c78f843c437bda5c",
        "name": "",
        "group": "69d7ea2138e75f9b",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send query",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2300,
        "wires": [
            [
                "eae372f27fe0d255"
            ]
        ]
    },
    {
        "id": "7bbcf456c425af48",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if(msg.SPARQL && msg.agid){\n    msg.payload = msg.SPARQL\n    msg.headers = {'Content-Type': 'text/plain'}\n    return msg\n} else {\n    return [null, {payload: 'Please specify partner, node and SPARQL'}]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2300,
        "wires": [
            [
                "a0d128d84397f157"
            ],
            [
                "bd8b66c4c4a216c5"
            ]
        ]
    },
    {
        "id": "eae372f27fe0d255",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Get variables",
        "rules": [
            {
                "t": "set",
                "p": "cid",
                "pt": "msg",
                "to": "selectedCid",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "agid",
                "pt": "msg",
                "to": "selectedAgid",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "SPARQL",
                "pt": "msg",
                "to": "selectedSPARQL",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2300,
        "wires": [
            [
                "7bbcf456c425af48"
            ]
        ]
    },
    {
        "id": "a0d128d84397f157",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Send remote SPARQL query",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/discovery/remote/semantic/{{agid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 740,
        "y": 2280,
        "wires": [
            [
                "bd5f8d7b825d5fd6"
            ]
        ]
    },
    {
        "id": "f9a6d9642cf5cd8c",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Store SPARQL result",
        "rules": [
            {
                "t": "set",
                "p": "resultSPARQL",
                "pt": "flow",
                "to": "payload.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2220,
        "wires": [
            [
                "848b4913ed0f3307"
            ]
        ]
    },
    {
        "id": "bd5f8d7b825d5fd6",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if(msg.statusCode === 200){\n    if(msg.payload.message){\n    if(typeof msg.payload.message  === 'object'){\n        msg.payload.message = JSON.stringify(msg.payload.message, null, 2);\n    }\n    return msg\n}\n} else {\n    return [null, {payload: 'Node is not reachable'}]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2280,
        "wires": [
            [
                "f9a6d9642cf5cd8c"
            ],
            [
                "e49aff9677ffe86f"
            ]
        ]
    },
    {
        "id": "848b4913ed0f3307",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "5324084eaf1fdf2d",
            "fdc5d41ff0dcc42e",
            "e7603f0552b9f7e3",
            "875a4c9065e26984"
        ],
        "x": 1225,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e7db45ea7c5e9876",
        "type": "ui_template",
        "z": "c78f843c437bda5c",
        "group": "69d7ea2138e75f9b",
        "name": "SPARQL ",
        "order": 6,
        "width": 0,
        "height": 0,
        "format": "\n<textarea id='textArea' placeholder=\"Specify your SPARQL here\" ng-model=\"msg.payload\"  ng-change=\"send(msg)\"  cols=\"40\" rows=\"8\">\n</textarea>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 680,
        "y": 2180,
        "wires": [
            [
                "febfb34b3433db43"
            ]
        ]
    },
    {
        "id": "febfb34b3433db43",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Store",
        "rules": [
            {
                "t": "set",
                "p": "selectedSPARQL",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "eada1cb550dc3576",
        "type": "ui_ui_control",
        "z": "c78f843c437bda5c",
        "name": "",
        "events": "change",
        "x": 80,
        "y": 2160,
        "wires": [
            [
                "1208ab0d4da06801",
                "199deaff0ce2dfe5"
            ]
        ]
    },
    {
        "id": "1208ab0d4da06801",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 2180,
        "wires": [
            [
                "e7db45ea7c5e9876"
            ]
        ]
    },
    {
        "id": "3ed8760f953416f4",
        "type": "ui_template",
        "z": "c78f843c437bda5c",
        "group": "0f99c8ea07436709",
        "name": "RESULT",
        "order": 3,
        "width": 14,
        "height": 7,
        "format": "<div>\n    <h4>Query result:</h4>\n    <pre>{{msg.SPARQL}}</pre>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 380,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "bd8b66c4c4a216c5",
        "type": "ui_toast",
        "z": "c78f843c437bda5c",
        "position": "bottom left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "err notif",
        "x": 680,
        "y": 2340,
        "wires": []
    },
    {
        "id": "3d2b767c5cd21d1f",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Predefined SPARQL:",
        "tooltip": "",
        "place": "Select option",
        "group": "69d7ea2138e75f9b",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 600,
        "y": 2080,
        "wires": [
            [
                "e7db45ea7c5e9876"
            ]
        ]
    },
    {
        "id": "d8a9dcfdb4a761d9",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "set Options",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"Custom\":\"\"},{\"Get all\":\"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \\nSELECT * WHERE { ?sub ?pred ?obj . } \\nLIMIT 100\"},{\"Get all IODs\":\"SELECT DISTINCT ?g \\n WHERE { \\n  GRAPH ?g { ?s ?p ?o }\\n}\"},{\"Get all info about my OID\":\"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \\nSELECT * WHERE { \\nGRAPH $g { \\n?sub ?pred ?obj . \\n} FILTER ( $g IN (<graph:YOUR-OID-HERE> ))} \"},{\"Get all your item properties\":\"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \\nSELECT * WHERE { \\nGRAPH $g { \\n?sub ?pred ?obj . \\nFILTER ( $pred IN (<https://www.w3.org/2019/wot/td#monitors> ))\\n} FILTER ( $g IN (<graph:YOUR-OID-HERE> ))} \"},{\"Get all properties under node\":\"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \\nSELECT * WHERE { \\n?sub <https://www.w3.org/2019/wot/td#monitors> ?obj . \\n}\"},{\"Find all OIDs of a given type\":\"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> \\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> \\nSELECT * WHERE { \\nGRAPH $g { \\n?sub <https://www.w3.org/2019/wot/td#type> \\\"Device\\\" . \\n}} \"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 2080,
        "wires": [
            [
                "3d2b767c5cd21d1f"
            ]
        ]
    },
    {
        "id": "199deaff0ce2dfe5",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "func": "\nreturn {};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 2080,
        "wires": [
            [
                "d8a9dcfdb4a761d9"
            ]
        ]
    },
    {
        "id": "68c9a4f5531c4d6c",
        "type": "ui_ui_control",
        "z": "c78f843c437bda5c",
        "name": "",
        "events": "change",
        "x": 940,
        "y": 1800,
        "wires": [
            [
                "2792c19fc72785b8"
            ]
        ]
    },
    {
        "id": "e49aff9677ffe86f",
        "type": "ui_toast",
        "z": "c78f843c437bda5c",
        "position": "bottom left",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "err notif",
        "x": 1080,
        "y": 2280,
        "wires": []
    },
    {
        "id": "18b49201a7737ecc",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get partner nodes",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/discovery/nodes/organisation/{{partner.cid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1010,
        "y": 1560,
        "wires": [
            [
                "7e8d950a3cf703ea"
            ]
        ]
    },
    {
        "id": "7e8d950a3cf703ea",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if (msg.statusCode === 200) {\n    msg.payload.message.forEach(node =>{\n        msg.partner.nodes.push(node.agid)\n    })\n    \n} \nmsg.payload= msg.partner\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1560,
        "wires": [
            [
                "3ebbbb3b100a783e"
            ]
        ]
    },
    {
        "id": "75e4f3782ecae0c1",
        "type": "switch",
        "z": "c78f843c437bda5c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 1560,
        "wires": [
            [
                "18b49201a7737ecc"
            ],
            [
                "3ebbbb3b100a783e"
            ]
        ]
    },
    {
        "id": "f706960487858ad7",
        "type": "ui_dropdown",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Community:",
        "tooltip": "",
        "place": "Select community",
        "group": "69d7ea2138e75f9b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1030,
        "y": 1920,
        "wires": [
            [
                "273bf2100786e21e"
            ]
        ]
    },
    {
        "id": "d0941526d598e387",
        "type": "ui_switch",
        "z": "c78f843c437bda5c",
        "name": "",
        "label": "Community / Partner: ",
        "tooltip": "",
        "group": "69d7ea2138e75f9b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "partner",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "community",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 440,
        "y": 1980,
        "wires": [
            [
                "2f10e25674f8cd81",
                "7a488604378a3660"
            ]
        ]
    },
    {
        "id": "2f10e25674f8cd81",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "store",
        "rules": [
            {
                "t": "set",
                "p": "selectedMode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 1900,
        "wires": [
            [
                "433fd4c0c2d246bf"
            ]
        ]
    },
    {
        "id": "2ea6fc852b9e6dfd",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Switch",
        "func": "if(msg.payload === 'community'){\n    return [{enabled: false, payload: 0}, {enabled: true} ]\n} else {\n    return [{enabled: true}, {enabled: false, payload: 0} ]\n}\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1900,
        "wires": [
            [
                "5545a031a76c0644"
            ],
            [
                "f706960487858ad7"
            ]
        ]
    },
    {
        "id": "433fd4c0c2d246bf",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "get ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "selectedMode",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1900,
        "wires": [
            [
                "2ea6fc852b9e6dfd"
            ]
        ]
    },
    {
        "id": "ade7cefc659461bc",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "get ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "selectedMode",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 1980,
        "wires": [
            [
                "d0941526d598e387"
            ]
        ]
    },
    {
        "id": "a15ab0146e589c02",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get myOrg communities",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/collaboration/communities",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 150,
        "y": 1720,
        "wires": [
            [
                "46f7cc27bd9c8800"
            ]
        ]
    },
    {
        "id": "46f7cc27bd9c8800",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if (msg.statusCode === 200) {\n    msg.payload = msg.payload.message\n    msg.communities = msg.payload.message\n   \n    return msg;\n} else {\n     node.warn('Status code:' + msg.statusCode)\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1720,
        "wires": [
            [
                "f2fcb641f9471c6c"
            ]
        ]
    },
    {
        "id": "f2fcb641f9471c6c",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "Store",
        "rules": [
            {
                "t": "set",
                "p": "communities",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1720,
        "wires": [
            [
                "d7c2e955ddb503d5"
            ]
        ]
    },
    {
        "id": "e577529d33da1c28",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "get ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "communities",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1980,
        "wires": [
            [
                "e07066816a484b3f"
            ]
        ]
    },
    {
        "id": "e07066816a484b3f",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "parse",
        "func": "msg.options = []\nmsg.payload.forEach(com => {\n    const obj = {}\n    obj[com.name] = com.commId\n    msg.options.push(obj)\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 1980,
        "wires": [
            [
                "f706960487858ad7"
            ]
        ]
    },
    {
        "id": "273bf2100786e21e",
        "type": "http request",
        "z": "c78f843c437bda5c",
        "name": "Get community detail",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://auroral-agent:4000/api/discovery/nodes/community/{{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1120,
        "y": 1880,
        "wires": [
            [
                "a071f4f3ec985fac"
            ]
        ]
    },
    {
        "id": "a071f4f3ec985fac",
        "type": "function",
        "z": "c78f843c437bda5c",
        "name": "Parse",
        "func": "if(msg.statusCode == 200) {\n  msg.options = []\n  msg.nodes = msg.payload.message\n  msg.nodes.forEach(node => {\n     msg.options.push(node.agid)\n  })\n return msg\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1880,
        "wires": [
            [
                "b061711ed2875f1e"
            ]
        ]
    },
    {
        "id": "d7c2e955ddb503d5",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "b32a39a54c4419f3"
        ],
        "x": 545,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b32a39a54c4419f3",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "Update communities list",
        "links": [
            "d7c2e955ddb503d5"
        ],
        "x": 855,
        "y": 1980,
        "wires": [
            [
                "e577529d33da1c28"
            ]
        ]
    },
    {
        "id": "4ccfb03aae30696d",
        "type": "link out",
        "z": "c78f843c437bda5c",
        "name": "",
        "mode": "link",
        "links": [
            "5324084eaf1fdf2d",
            "bac8dc338471c0cd"
        ],
        "x": 745,
        "y": 2020,
        "wires": []
    },
    {
        "id": "7a488604378a3660",
        "type": "change",
        "z": "c78f843c437bda5c",
        "name": "clear",
        "rules": [
            {
                "t": "set",
                "p": "selectedAgid",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectedCid",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "resultSPARQL",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 2020,
        "wires": [
            [
                "4ccfb03aae30696d"
            ]
        ]
    },
    {
        "id": "3f50189abd31f52b",
        "type": "ui_ui_control",
        "z": "c78f843c437bda5c",
        "name": "",
        "events": "change",
        "x": 120,
        "y": 1980,
        "wires": [
            [
                "ade7cefc659461bc"
            ]
        ]
    },
    {
        "id": "bac8dc338471c0cd",
        "type": "link in",
        "z": "c78f843c437bda5c",
        "name": "Update nodes",
        "links": [
            "4ccfb03aae30696d"
        ],
        "x": 1105,
        "y": 1800,
        "wires": [
            [
                "b061711ed2875f1e"
            ]
        ]
    },
    {
        "id": "47fe486c414b603c",
        "type": "auroralAgent",
        "host": "auroral-agent",
        "port": "4000",
        "serverPort": "1250",
        "protocol": "http",
        "authentification": false,
        "ignoreCertificate": false
    },
    {
        "id": "19ff0589e9dc01ae",
        "type": "ui_group",
        "name": "Input",
        "tab": "0fc43f2662d3c814",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7fe25f629f718e1f",
        "type": "ui_group",
        "name": "Device detail",
        "tab": "0fc43f2662d3c814",
        "order": 2,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "4dee40efc3e42c9e",
        "type": "ui_group",
        "name": "Result",
        "tab": "0fc43f2662d3c814",
        "order": 3,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "69d7ea2138e75f9b",
        "type": "ui_group",
        "name": "SPARQL",
        "tab": "88ec06aeda0e3b39",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0f99c8ea07436709",
        "type": "ui_group",
        "name": "Result",
        "tab": "88ec06aeda0e3b39",
        "order": 2,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0fc43f2662d3c814",
        "type": "ui_tab",
        "name": "Consume",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "88ec06aeda0e3b39",
        "type": "ui_tab",
        "name": "Discover",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    }
]